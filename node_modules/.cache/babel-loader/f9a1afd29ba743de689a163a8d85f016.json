{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRouter = require(\"react-router\");\n\nvar _LoadingContext = require(\"./LoadingContext\");\n\nvar _LoadingMiddleware = _interopRequireDefault(require(\"./LoadingMiddleware\"));\n\nvar _DefaultLoadingScreen = _interopRequireDefault(require(\"./DefaultLoadingScreen\"));\n\nvar _utils = require(\"./utils\");\n\nvar _excluded = [\"children\", \"loadingScreen\", \"maxLoadingTime\"];\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar Switcher = function Switcher(_ref) {\n  var children = _ref.children,\n      LoadingScreen = _ref.loadingScreen,\n      _ref$maxLoadingTime = _ref.maxLoadingTime,\n      maxLoadingTime = _ref$maxLoadingTime === void 0 ? 0 : _ref$maxLoadingTime,\n      routerContext = _objectWithoutProperties(_ref, _excluded);\n\n  var loadingContext = (0, _react.useContext)(_LoadingContext.LoadingContext);\n  var isCurrentlyLoading = (0, _react.useContext)(_LoadingContext.LoadingGetterContext);\n  var location = (0, _reactRouter.useLocation)();\n\n  var _useState = (0, _react.useState)(function () {\n    var isFirstPageLoadable = (0, _utils.isLoadable)(location, children); // if first page uses loading then show loading screen\n    // if first page uses loading then show loading screen\n\n    return isFirstPageLoadable ? {\n      showLoadingScreen: true\n    } : location;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      current = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(current),\n      _useState4 = _slicedToArray(_useState3, 2),\n      next = _useState4[0],\n      setNext = _useState4[1];\n\n  var timeout = (0, _react.useRef)(); // when location changed\n\n  (0, _react.useEffect)(function () {\n    var _next$location, _current$location;\n\n    var isPageLoadable = (0, _utils.isLoadable)(location, children); // if not the same route mount it to start loading\n\n    if ((location === null || location === void 0 ? void 0 : location.pathname) !== ((_next$location = next.location) === null || _next$location === void 0 ? void 0 : _next$location.pathname)) {\n      setNext({\n        location: location,\n        routerContext: routerContext\n      });\n\n      if (!isPageLoadable) {\n        loadingContext.done();\n        setCurrent({\n          location: location,\n          routerContext: routerContext\n        });\n      } else {\n        if (!isCurrentlyLoading) loadingContext.start();else loadingContext.restart();\n      }\n    } // if same as current route stop loading\n\n\n    if ((location === null || location === void 0 ? void 0 : location.pathname) === ((_current$location = current.location) === null || _current$location === void 0 ? void 0 : _current$location.pathname)) {\n      loadingContext.done();\n      if (location.search !== current.location.search) setCurrent({\n        location: location,\n        routerContext: routerContext\n      });\n    }\n  }, [location]); // when loading ends\n\n  (0, _react.useEffect)(function () {\n    if (!isCurrentlyLoading && (0, _utils.isRoutesDifferent)(current, next)) setCurrent(next);\n  }, [isCurrentlyLoading]); // setTimeout if maxLoadingTime is provided\n\n  (0, _react.useEffect)(function () {\n    if (maxLoadingTime > 0) {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n        timeout.current = undefined;\n      }\n\n      if ((0, _utils.isRoutesDifferent)(current, next)) {\n        timeout.current = setTimeout(function () {\n          loadingContext.done();\n        }, maxLoadingTime);\n      }\n    }\n  }, [current, next]); // memo current and next components\n\n  return (0, _react.useMemo)(function () {\n    var _current$location2, _next$location2;\n\n    return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, !current.showLoadingScreen ? /*#__PURE__*/_react[\"default\"].createElement(RouteComponent, {\n      key: (_current$location2 = current.location) === null || _current$location2 === void 0 ? void 0 : _current$location2.pathname,\n      route: current,\n      allRoutes: children\n    }) : LoadingScreen ? /*#__PURE__*/_react[\"default\"].createElement(LoadingScreen, {\n      location: current.location\n    }) : /*#__PURE__*/_react[\"default\"].createElement(_DefaultLoadingScreen[\"default\"], {\n      location: current.location\n    }), (0, _utils.isRoutesDifferent)(current, next) && /*#__PURE__*/_react[\"default\"].createElement(RouteComponent, {\n      key: (_next$location2 = next.location) === null || _next$location2 === void 0 ? void 0 : _next$location2.pathname,\n      route: next,\n      allRoutes: children,\n      hidden: true\n    }));\n  }, [current, next]);\n}; // necessary wrappings around route.component\n\n\nvar RouteComponent = function RouteComponent(_ref2) {\n  var route = _ref2.route,\n      allRoutes = _ref2.allRoutes,\n      hidden = _ref2.hidden;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: hidden ? {\n      display: 'none'\n    } : undefined\n  }, (0, _react.useMemo)(function () {\n    return /*#__PURE__*/_react[\"default\"].createElement(_reactRouter.__RouterContext.Provider, {\n      value: route.routerContext\n    }, /*#__PURE__*/_react[\"default\"].createElement(_react.Suspense, {\n      fallback: null\n    }, (0, _utils.findMatchingElement)(route.location, allRoutes)));\n  }, [route]));\n}; // combine topbar and switch\n\n\nvar LoadingSwitch = function LoadingSwitch(_ref3) {\n  var children = _ref3.children,\n      loadingScreen = _ref3.loadingScreen,\n      maxLoadingTime = _ref3.maxLoadingTime;\n  return /*#__PURE__*/_react[\"default\"].createElement(_LoadingMiddleware[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_reactRouter.__RouterContext.Consumer, null, function (context) {\n    return /*#__PURE__*/_react[\"default\"].createElement(Switcher, _extends({}, context, {\n      loadingScreen: loadingScreen,\n      maxLoadingTime: maxLoadingTime\n    }), children);\n  }));\n};\n\nvar _default = LoadingSwitch;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../src/LoadingSwitch.jsx"],"names":["Switcher","children","loadingScreen","LoadingScreen","maxLoadingTime","routerContext","loadingContext","LoadingContext","isCurrentlyLoading","LoadingGetterContext","location","current","setCurrent","isFirstPageLoadable","showLoadingScreen","next","setNext","timeout","isPageLoadable","clearTimeout","setTimeout","RouteComponent","route","allRoutes","hidden","display","undefined","LoadingSwitch"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useMemo, Suspense, useRef } from 'react';\nimport { __RouterContext as RouterContext, useLocation } from 'react-router';\nimport { LoadingContext, LoadingGetterContext } from './LoadingContext';\nimport LoadingMiddleware from './LoadingMiddleware';\nimport DefaultLoadingScreen from './DefaultLoadingScreen';\nimport { isLoadable, findMatchingElement, isRoutesDifferent } from './utils';\n\nconst Switcher = ({\n    children,\n    loadingScreen: LoadingScreen,\n    maxLoadingTime = 0,\n    ...routerContext\n}) => {\n    const loadingContext = useContext(LoadingContext);\n    const isCurrentlyLoading = useContext(LoadingGetterContext);\n    const location = useLocation();\n\n    const [current, setCurrent] = useState(() => {\n        const isFirstPageLoadable = isLoadable(location, children);\n        // if first page uses loading then show loading screen\n        return isFirstPageLoadable\n            ? { showLoadingScreen: true }\n            : location;\n    });\n    const [next, setNext] = useState(current);\n\n    const timeout = useRef();\n\n    // when location changed\n    useEffect(() => {\n        const isPageLoadable = isLoadable(location, children);\n\n        // if not the same route mount it to start loading\n        if (location?.pathname !== next.location?.pathname) {\n            setNext({ location, routerContext });\n\n            if (!isPageLoadable) {\n                loadingContext.done();\n                setCurrent({ location, routerContext });\n            } else {\n                if (!isCurrentlyLoading)\n                    loadingContext.start();\n                else\n                    loadingContext.restart();\n            }\n        }\n\n        // if same as current route stop loading\n        if (location?.pathname === current.location?.pathname) {\n            loadingContext.done();\n\n            if (location.search !== current.location.search)\n                setCurrent({ location, routerContext });\n        }\n    }, [location]);\n\n    // when loading ends\n    useEffect(() => {\n        if (!isCurrentlyLoading && isRoutesDifferent(current, next))\n            setCurrent(next);\n    }, [isCurrentlyLoading]);\n\n    // setTimeout if maxLoadingTime is provided\n    useEffect(() => {\n        if (maxLoadingTime > 0) {\n            if (timeout.current) {\n                clearTimeout(timeout.current);\n                timeout.current = undefined;\n            }\n\n            if (isRoutesDifferent(current, next)) {\n                timeout.current = setTimeout(() => {\n                    loadingContext.done();\n                }, maxLoadingTime);\n            }\n        }\n    }, [current, next]);\n\n    // memo current and next components\n    return useMemo(\n        () => <>\n            {/* current */}\n            {\n                !current.showLoadingScreen\n                    ? <RouteComponent key={current.location?.pathname} route={current} allRoutes={children} />\n                    : LoadingScreen\n                        ? <LoadingScreen location={current.location} />\n                        : <DefaultLoadingScreen location={current.location} />\n            }\n\n            {/* hidden next */}\n            {\n                isRoutesDifferent(current, next) &&\n                <RouteComponent key={next.location?.pathname} route={next} allRoutes={children} hidden />\n            }\n        </>,\n        [current, next]\n    );\n};\n\n// necessary wrappings around route.component\nconst RouteComponent = ({ route, allRoutes, hidden }) =>\n    <div style={hidden ? { display: 'none' } : undefined}>\n        {useMemo(\n            () => <RouterContext.Provider value={route.routerContext}>\n                <Suspense fallback={null}>\n                    {findMatchingElement(route.location, allRoutes)}\n                </Suspense>\n            </RouterContext.Provider>,\n            [route]\n        )}\n    </div>;\n\n// combine topbar and switch\nconst LoadingSwitch = ({ children, loadingScreen, maxLoadingTime }) =>\n    <LoadingMiddleware>\n        <RouterContext.Consumer>\n            {\n                context =>\n                    <Switcher {...context} loadingScreen={loadingScreen} maxLoadingTime={maxLoadingTime}>\n                        {children}\n                    </Switcher>\n            }\n        </RouterContext.Consumer>\n    </LoadingMiddleware>;\n\nexport default LoadingSwitch;\n"]},"metadata":{},"sourceType":"script"}