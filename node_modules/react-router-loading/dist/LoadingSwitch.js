"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactRouter = require("react-router");

var _LoadingContext = require("./LoadingContext");

var _LoadingMiddleware = _interopRequireDefault(require("./LoadingMiddleware"));

var _DefaultLoadingScreen = _interopRequireDefault(require("./DefaultLoadingScreen"));

var _utils = require("./utils");

var _excluded = ["children", "loadingScreen", "maxLoadingTime"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Switcher = function Switcher(_ref) {
  var children = _ref.children,
      LoadingScreen = _ref.loadingScreen,
      _ref$maxLoadingTime = _ref.maxLoadingTime,
      maxLoadingTime = _ref$maxLoadingTime === void 0 ? 0 : _ref$maxLoadingTime,
      routerContext = _objectWithoutProperties(_ref, _excluded);

  var loadingContext = (0, _react.useContext)(_LoadingContext.LoadingContext);
  var isCurrentlyLoading = (0, _react.useContext)(_LoadingContext.LoadingGetterContext);
  var location = (0, _reactRouter.useLocation)();

  var _useState = (0, _react.useState)(function () {
    var isFirstPageLoadable = (0, _utils.isLoadable)(location, children); // if first page uses loading then show loading screen

    // if first page uses loading then show loading screen
    return isFirstPageLoadable ? {
      showLoadingScreen: true
    } : location;
  }),
      _useState2 = _slicedToArray(_useState, 2),
      current = _useState2[0],
      setCurrent = _useState2[1];

  var _useState3 = (0, _react.useState)(current),
      _useState4 = _slicedToArray(_useState3, 2),
      next = _useState4[0],
      setNext = _useState4[1];

  var timeout = (0, _react.useRef)(); // when location changed

  (0, _react.useEffect)(function () {
    var _next$location, _current$location;

    var isPageLoadable = (0, _utils.isLoadable)(location, children); // if not the same route mount it to start loading

    if ((location === null || location === void 0 ? void 0 : location.pathname) !== ((_next$location = next.location) === null || _next$location === void 0 ? void 0 : _next$location.pathname)) {
      setNext({
        location: location,
        routerContext: routerContext
      });

      if (!isPageLoadable) {
        loadingContext.done();
        setCurrent({
          location: location,
          routerContext: routerContext
        });
      } else {
        if (!isCurrentlyLoading) loadingContext.start();else loadingContext.restart();
      }
    } // if same as current route stop loading


    if ((location === null || location === void 0 ? void 0 : location.pathname) === ((_current$location = current.location) === null || _current$location === void 0 ? void 0 : _current$location.pathname)) {
      loadingContext.done();
      if (location.search !== current.location.search) setCurrent({
        location: location,
        routerContext: routerContext
      });
    }
  }, [location]); // when loading ends

  (0, _react.useEffect)(function () {
    if (!isCurrentlyLoading && (0, _utils.isRoutesDifferent)(current, next)) setCurrent(next);
  }, [isCurrentlyLoading]); // setTimeout if maxLoadingTime is provided

  (0, _react.useEffect)(function () {
    if (maxLoadingTime > 0) {
      if (timeout.current) {
        clearTimeout(timeout.current);
        timeout.current = undefined;
      }

      if ((0, _utils.isRoutesDifferent)(current, next)) {
        timeout.current = setTimeout(function () {
          loadingContext.done();
        }, maxLoadingTime);
      }
    }
  }, [current, next]); // memo current and next components

  return (0, _react.useMemo)(function () {
    var _current$location2, _next$location2;

    return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, !current.showLoadingScreen ? /*#__PURE__*/_react["default"].createElement(RouteComponent, {
      key: (_current$location2 = current.location) === null || _current$location2 === void 0 ? void 0 : _current$location2.pathname,
      route: current,
      allRoutes: children
    }) : LoadingScreen ? /*#__PURE__*/_react["default"].createElement(LoadingScreen, {
      location: current.location
    }) : /*#__PURE__*/_react["default"].createElement(_DefaultLoadingScreen["default"], {
      location: current.location
    }), (0, _utils.isRoutesDifferent)(current, next) && /*#__PURE__*/_react["default"].createElement(RouteComponent, {
      key: (_next$location2 = next.location) === null || _next$location2 === void 0 ? void 0 : _next$location2.pathname,
      route: next,
      allRoutes: children,
      hidden: true
    }));
  }, [current, next]);
}; // necessary wrappings around route.component


var RouteComponent = function RouteComponent(_ref2) {
  var route = _ref2.route,
      allRoutes = _ref2.allRoutes,
      hidden = _ref2.hidden;
  return /*#__PURE__*/_react["default"].createElement("div", {
    style: hidden ? {
      display: 'none'
    } : undefined
  }, (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react["default"].createElement(_reactRouter.__RouterContext.Provider, {
      value: route.routerContext
    }, /*#__PURE__*/_react["default"].createElement(_react.Suspense, {
      fallback: null
    }, (0, _utils.findMatchingElement)(route.location, allRoutes)));
  }, [route]));
}; // combine topbar and switch


var LoadingSwitch = function LoadingSwitch(_ref3) {
  var children = _ref3.children,
      loadingScreen = _ref3.loadingScreen,
      maxLoadingTime = _ref3.maxLoadingTime;
  return /*#__PURE__*/_react["default"].createElement(_LoadingMiddleware["default"], null, /*#__PURE__*/_react["default"].createElement(_reactRouter.__RouterContext.Consumer, null, function (context) {
    return /*#__PURE__*/_react["default"].createElement(Switcher, _extends({}, context, {
      loadingScreen: loadingScreen,
      maxLoadingTime: maxLoadingTime
    }), children);
  }));
};

var _default = LoadingSwitch;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,