"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findMatchingElement = exports.isLoadable = exports.isRoutesDifferent = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactRouter = require("react-router");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var isRoutesDifferent = function isRoutesDifferent(current, next) {
  var _next$location, _current$location;

  return ((_next$location = next.location) === null || _next$location === void 0 ? void 0 : _next$location.pathname) !== ((_current$location = current.location) === null || _current$location === void 0 ? void 0 : _current$location.pathname);
};

exports.isRoutesDifferent = isRoutesDifferent;

var findMatchingRoute = function findMatchingRoute(location, routes) {
  var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (matchingElement) {};
  var match; // We use React.Children.forEach instead of React.Children.toArray().find()
  // here because toArray adds keys to all child elements and we do not want
  // to trigger an unmount/remount for two <Route>s that render the same
  // component at different URLs.

  _react["default"].Children.forEach(routes, function (child) {
    if (match == null && /*#__PURE__*/_react["default"].isValidElement(child)) {
      var path = child.props.path || child.props.from;
      match = (0, _reactRouter.matchPath)(location === null || location === void 0 ? void 0 : location.pathname, _objectSpread(_objectSpread({}, child.props), {}, {
        path: path
      }));
      if (match) callback(child);
    }
  });

  return match;
};

var isLoadable = function isLoadable(location, routes) {
  var isLoadable;
  var match = findMatchingRoute(location, routes, function (matchingElement) {
    isLoadable = matchingElement.props.loading;
  });
  return match ? isLoadable : false;
};

exports.isLoadable = isLoadable;

var findMatchingElement = function findMatchingElement(location, routes) {
  var element;
  var match = findMatchingRoute(location, routes, function (matchingElement) {
    element = matchingElement;
  });
  return match ? /*#__PURE__*/_react["default"].cloneElement(element, {
    location: location,
    computedMatch: match
  }) : null;
};

exports.findMatchingElement = findMatchingElement;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy91dGlscy5qcyJdLCJuYW1lcyI6WyJpc1JvdXRlc0RpZmZlcmVudCIsImN1cnJlbnQiLCJuZXh0IiwibG9jYXRpb24iLCJwYXRobmFtZSIsImZpbmRNYXRjaGluZ1JvdXRlIiwicm91dGVzIiwiY2FsbGJhY2siLCJtYXRjaGluZ0VsZW1lbnQiLCJtYXRjaCIsIlJlYWN0IiwiQ2hpbGRyZW4iLCJmb3JFYWNoIiwiY2hpbGQiLCJpc1ZhbGlkRWxlbWVudCIsInBhdGgiLCJwcm9wcyIsImZyb20iLCJpc0xvYWRhYmxlIiwibG9hZGluZyIsImZpbmRNYXRjaGluZ0VsZW1lbnQiLCJlbGVtZW50IiwiY2xvbmVFbGVtZW50IiwiY29tcHV0ZWRNYXRjaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7O0FBRU8sSUFBTUEsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUFDQyxPQUFELEVBQVVDLElBQVY7QUFBQTs7QUFBQSxTQUFtQixtQkFBQUEsSUFBSSxDQUFDQyxRQUFMLGtFQUFlQyxRQUFmLDRCQUE0QkgsT0FBTyxDQUFDRSxRQUFwQyxzREFBNEIsa0JBQWtCQyxRQUE5QyxDQUFuQjtBQUFBLENBQTFCOzs7O0FBRVAsSUFBTUMsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUFDRixRQUFELEVBQVdHLE1BQVgsRUFBMkQ7QUFBQSxNQUF4Q0MsUUFBd0MsdUVBQTdCLFVBQUNDLGVBQUQsRUFBcUIsQ0FBRyxDQUFLO0FBQ2pGLE1BQUlDLEtBQUosQ0FEaUYsQ0FHakY7QUFDQTtBQUNBO0FBQ0E7O0FBQ0FDLG9CQUFNQyxRQUFOLENBQWVDLE9BQWYsQ0FBdUJOLE1BQXZCLEVBQStCLFVBQUFPLEtBQUssRUFBSTtBQUNwQyxRQUFJSixLQUFLLElBQUksSUFBVCxpQkFBaUJDLGtCQUFNSSxjQUFOLENBQXFCRCxLQUFyQixDQUFyQixFQUFrRDtBQUM5QyxVQUFNRSxJQUFJLEdBQUdGLEtBQUssQ0FBQ0csS0FBTixDQUFZRCxJQUFaLElBQW9CRixLQUFLLENBQUNHLEtBQU4sQ0FBWUMsSUFBN0M7QUFDQVIsTUFBQUEsS0FBSyxHQUFHLDRCQUFVTixRQUFWLGFBQVVBLFFBQVYsdUJBQVVBLFFBQVEsQ0FBRUMsUUFBcEIsa0NBQW1DUyxLQUFLLENBQUNHLEtBQXpDO0FBQWdERCxRQUFBQSxJQUFJLEVBQUpBO0FBQWhELFNBQVI7QUFFQSxVQUFJTixLQUFKLEVBQ0lGLFFBQVEsQ0FBQ00sS0FBRCxDQUFSO0FBQ1A7QUFDSixHQVJEOztBQVVBLFNBQU9KLEtBQVA7QUFDSCxDQWxCRDs7QUFvQk8sSUFBTVMsVUFBVSxHQUFHLG9CQUFDZixRQUFELEVBQVdHLE1BQVgsRUFBc0I7QUFDNUMsTUFBSVksVUFBSjtBQUVBLE1BQU1ULEtBQUssR0FBR0osaUJBQWlCLENBQzNCRixRQUQyQixFQUUzQkcsTUFGMkIsRUFHM0IsVUFBQ0UsZUFBRCxFQUFxQjtBQUFFVSxJQUFBQSxVQUFVLEdBQUdWLGVBQWUsQ0FBQ1EsS0FBaEIsQ0FBc0JHLE9BQW5DO0FBQTZDLEdBSHpDLENBQS9CO0FBTUEsU0FBT1YsS0FBSyxHQUFHUyxVQUFILEdBQWdCLEtBQTVCO0FBQ0gsQ0FWTTs7OztBQVlBLElBQU1FLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsQ0FBQ2pCLFFBQUQsRUFBV0csTUFBWCxFQUFzQjtBQUNyRCxNQUFJZSxPQUFKO0FBRUEsTUFBTVosS0FBSyxHQUFHSixpQkFBaUIsQ0FDM0JGLFFBRDJCLEVBRTNCRyxNQUYyQixFQUczQixVQUFDRSxlQUFELEVBQXFCO0FBQUVhLElBQUFBLE9BQU8sR0FBR2IsZUFBVjtBQUE0QixHQUh4QixDQUEvQjtBQU1BLFNBQU9DLEtBQUssZ0JBQ05DLGtCQUFNWSxZQUFOLENBQW1CRCxPQUFuQixFQUE0QjtBQUFFbEIsSUFBQUEsUUFBUSxFQUFSQSxRQUFGO0FBQVlvQixJQUFBQSxhQUFhLEVBQUVkO0FBQTNCLEdBQTVCLENBRE0sR0FFTixJQUZOO0FBR0gsQ0FaTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYXRjaFBhdGggfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuXG5leHBvcnQgY29uc3QgaXNSb3V0ZXNEaWZmZXJlbnQgPSAoY3VycmVudCwgbmV4dCkgPT4gbmV4dC5sb2NhdGlvbj8ucGF0aG5hbWUgIT09IGN1cnJlbnQubG9jYXRpb24/LnBhdGhuYW1lO1xuXG5jb25zdCBmaW5kTWF0Y2hpbmdSb3V0ZSA9IChsb2NhdGlvbiwgcm91dGVzLCBjYWxsYmFjayA9IChtYXRjaGluZ0VsZW1lbnQpID0+IHsgfSkgPT4ge1xuICAgIGxldCBtYXRjaDtcblxuICAgIC8vIFdlIHVzZSBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoIGluc3RlYWQgb2YgUmVhY3QuQ2hpbGRyZW4udG9BcnJheSgpLmZpbmQoKVxuICAgIC8vIGhlcmUgYmVjYXVzZSB0b0FycmF5IGFkZHMga2V5cyB0byBhbGwgY2hpbGQgZWxlbWVudHMgYW5kIHdlIGRvIG5vdCB3YW50XG4gICAgLy8gdG8gdHJpZ2dlciBhbiB1bm1vdW50L3JlbW91bnQgZm9yIHR3byA8Um91dGU+cyB0aGF0IHJlbmRlciB0aGUgc2FtZVxuICAgIC8vIGNvbXBvbmVudCBhdCBkaWZmZXJlbnQgVVJMcy5cbiAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKHJvdXRlcywgY2hpbGQgPT4ge1xuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjaGlsZC5wcm9wcy5wYXRoIHx8IGNoaWxkLnByb3BzLmZyb207XG4gICAgICAgICAgICBtYXRjaCA9IG1hdGNoUGF0aChsb2NhdGlvbj8ucGF0aG5hbWUsIHsgLi4uY2hpbGQucHJvcHMsIHBhdGggfSk7XG5cbiAgICAgICAgICAgIGlmIChtYXRjaClcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhjaGlsZCk7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBtYXRjaDtcbn07XG5cbmV4cG9ydCBjb25zdCBpc0xvYWRhYmxlID0gKGxvY2F0aW9uLCByb3V0ZXMpID0+IHtcbiAgICBsZXQgaXNMb2FkYWJsZTtcblxuICAgIGNvbnN0IG1hdGNoID0gZmluZE1hdGNoaW5nUm91dGUoXG4gICAgICAgIGxvY2F0aW9uLFxuICAgICAgICByb3V0ZXMsXG4gICAgICAgIChtYXRjaGluZ0VsZW1lbnQpID0+IHsgaXNMb2FkYWJsZSA9IG1hdGNoaW5nRWxlbWVudC5wcm9wcy5sb2FkaW5nOyB9XG4gICAgKTtcblxuICAgIHJldHVybiBtYXRjaCA/IGlzTG9hZGFibGUgOiBmYWxzZTtcbn07XG5cbmV4cG9ydCBjb25zdCBmaW5kTWF0Y2hpbmdFbGVtZW50ID0gKGxvY2F0aW9uLCByb3V0ZXMpID0+IHtcbiAgICBsZXQgZWxlbWVudDtcblxuICAgIGNvbnN0IG1hdGNoID0gZmluZE1hdGNoaW5nUm91dGUoXG4gICAgICAgIGxvY2F0aW9uLFxuICAgICAgICByb3V0ZXMsXG4gICAgICAgIChtYXRjaGluZ0VsZW1lbnQpID0+IHsgZWxlbWVudCA9IG1hdGNoaW5nRWxlbWVudDsgfVxuICAgICk7XG5cbiAgICByZXR1cm4gbWF0Y2hcbiAgICAgICAgPyBSZWFjdC5jbG9uZUVsZW1lbnQoZWxlbWVudCwgeyBsb2NhdGlvbiwgY29tcHV0ZWRNYXRjaDogbWF0Y2ggfSlcbiAgICAgICAgOiBudWxsO1xufTtcbiJdfQ==